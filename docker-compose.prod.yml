# Docker Compose para Producci√≥n en EC2
# Uso: docker-compose -f docker-compose.prod.yml up -d

services:
  smart-intelligence-api:
    build: .
    container_name: smart-intelligence-api
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "127.0.0.1:8001:8001"  # Solo localhost para usar con Nginx
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # API Keys desde variables de entorno del sistema o .env
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      # Snowflake credentials
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_WAREHOUSE=${SNOWFLAKE_WAREHOUSE}
      - SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE}
      - SNOWFLAKE_SCHEMA=${SNOWFLAKE_SCHEMA}
    volumes:
      - ./backend/aidata:/app/backend/aidata:ro
      - ./frontend/media_files:/app/frontend/media_files:ro
      # Mount .env file to project root so load_dotenv finds it (/app/.env)
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  default:
    name: smart-intelligence-network

